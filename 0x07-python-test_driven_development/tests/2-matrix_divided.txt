"""external documentation for 2-matrix_divided.py"""
# run tests with python3 -m doctest -v ./tests/2-matrix_divided.txt

Import test module function:
matrix_divided divides all elements of a matrix
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> fmatrix = [[1.5, 3.5, 5.5], [7.5, 9.5, 11.5]]
>>> smatrix = [["1.5", 3.5, 5.5], [7.5, 9.5, "11.5"]]
>>> lmatrix = [[0, 2, 4, 6], [8, 10, 12],]


SUCCESS CASES

Test division of list of lists of integers with integer
    >>> matrix_divided(matrix, 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Test division of list of lists of floats with integer
    >>> matrix_divided(fmatrix, 5)
    [[0.3, 0.7, 1.1], [1.5, 1.9, 2.3]]

Test division of list of lists of integers with float
    >>> matrix_divided(matrix, 0.2)
    [[10.0, 20.0, 30.0], [40.0, 50.0, 60.0]]

Test division of list of lists of floats with float
    >>> matrix_divided(fmatrix, 0.5)
    [[3.0, 7.0, 11.0], [15.0, 19.0, 23.0]]



FAIL CASES

Test missing argument
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test no arguments
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
    
    >>> matrix_divided(None, None)
    Traceback (most recent call last):
    ...
    TypeError: 'NoneType' object is not iterable

Test additional arguments
    >>> matrix_divided(matrix, 4, "alx")
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test non-list data type arguments
    >>> matrix_divided({"a": [1, 2, 3], "b": [4, 5, 6]}, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test division by zero
    >>> matrix_divided(fmatrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test division by non-integer or float
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test matrix with different row sizes
    >>> matrix_divided(lmatrix, 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test list of lists of strings
    >>> matrix_divided(smatrix, 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
